# Generated by Django 4.2.13 on 2025-08-14 23:14

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('organizations', '0001_initial'),
        ('services', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Queue',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('name', models.CharField(help_text='Ex: BHS Dakar - Ouverture comptes', max_length=100, verbose_name='Nom de la file')),
                ('queue_type', models.CharField(choices=[('normal', 'Normale'), ('priority', 'Prioritaire'), ('vip', 'VIP'), ('appointment', 'Rendez-vous'), ('express', 'Express')], default='normal', max_length=20, verbose_name='Type de file')),
                ('description', models.TextField(blank=True, verbose_name='Description')),
                ('processing_strategy', models.CharField(choices=[('fifo', 'Premier arrivé, premier servi'), ('priority', 'Par priorité'), ('appointment_first', 'RDV en premier'), ('mixed', 'Mixte')], default='fifo', max_length=20, verbose_name='Stratégie de traitement')),
                ('max_capacity', models.PositiveIntegerField(default=0, help_text='0 pour capacité illimitée', verbose_name='Capacité maximum')),
                ('max_wait_time', models.PositiveIntegerField(default=120, validators=[django.core.validators.MinValueValidator(5)], verbose_name="Temps d'attente max (min)")),
                ('ticket_expiry_time', models.PositiveIntegerField(default=30, help_text='Temps après lequel un ticket expire', validators=[django.core.validators.MinValueValidator(5)], verbose_name='Expiration ticket (min)')),
                ('opening_hours', models.JSONField(blank=True, default=dict, help_text='Horaires par jour: {"monday": {"start": "08:00", "end": "17:00"}}', verbose_name="Horaires d'ouverture")),
                ('current_status', models.CharField(choices=[('active', 'Active'), ('paused', 'En pause'), ('closed', 'Fermée'), ('maintenance', 'Maintenance')], default='closed', max_length=20, verbose_name='Statut actuel')),
                ('last_ticket_number', models.PositiveIntegerField(default=0, help_text="Dernier numéro émis aujourd'hui", verbose_name='Dernier numéro de ticket')),
                ('current_ticket_number', models.PositiveIntegerField(default=0, help_text='Numéro actuellement appelé', verbose_name='Numéro de ticket actuel')),
                ('waiting_tickets_count', models.PositiveIntegerField(default=0, verbose_name='Tickets en attente')),
                ('stats_date', models.DateField(default=django.utils.timezone.now, verbose_name='Date des statistiques')),
                ('daily_tickets_issued', models.PositiveIntegerField(default=0, verbose_name="Tickets émis aujourd'hui")),
                ('daily_tickets_served', models.PositiveIntegerField(default=0, verbose_name="Tickets servis aujourd'hui")),
                ('daily_average_wait_time', models.PositiveIntegerField(default=0, verbose_name="Temps d'attente moyen (min)")),
                ('notifications_enabled', models.BooleanField(default=True, verbose_name='Notifications activées')),
                ('notify_before_turns', models.PositiveIntegerField(default=3, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(10)], verbose_name='Notifier X tours avant')),
                ('is_active', models.BooleanField(default=True, verbose_name='Active')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('organization', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='queues', to='organizations.organization', verbose_name='Organisation')),
                ('service', models.ForeignKey(help_text='Service traité par cette file', on_delete=django.db.models.deletion.CASCADE, related_name='queues', to='services.service', verbose_name='Service')),
            ],
            options={
                'verbose_name': "File d'attente",
                'verbose_name_plural': "Files d'attente",
                'db_table': 'queues_queue',
                'indexes': [models.Index(fields=['organization', 'current_status'], name='queues_queu_organiz_cf1ebf_idx'), models.Index(fields=['service', 'is_active'], name='queues_queu_service_27bd68_idx'), models.Index(fields=['stats_date'], name='queues_queu_stats_d_13e907_idx')],
                'unique_together': {('service', 'organization', 'queue_type')},
            },
        ),
    ]
