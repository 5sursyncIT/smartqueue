# Generated by Django 4.2.13 on 2025-08-19 23:41

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('contenttypes', '0002_remove_content_type_name'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('object_id', models.PositiveIntegerField(verbose_name="ID de l'objet")),
                ('subject', models.CharField(blank=True, max_length=200, verbose_name='Sujet final')),
                ('message', models.TextField(help_text='Message après remplacement des variables', verbose_name='Message final')),
                ('phone_number', models.CharField(blank=True, help_text='Pour notifications SMS', max_length=15, validators=[django.core.validators.RegexValidator(message='Format: +221XXXXXXXXX', regex='^\\+221[0-9]{9}$')], verbose_name='Numéro SMS')),
                ('email_address', models.EmailField(blank=True, help_text='Pour notifications email', max_length=254, verbose_name='Email')),
                ('push_token', models.TextField(blank=True, help_text='Token FCM pour notifications push', verbose_name='Token Push')),
                ('status', models.CharField(choices=[('pending', 'En attente'), ('queued', "En file d'attente"), ('sending', "En cours d'envoi"), ('sent', 'Envoyé'), ('delivered', 'Livré'), ('read', 'Lu'), ('failed', 'Échec'), ('cancelled', 'Annulé')], default='pending', max_length=20, verbose_name='Statut')),
                ('priority', models.CharField(choices=[('low', 'Basse'), ('normal', 'Normale'), ('high', 'Haute'), ('urgent', 'Urgente')], default='normal', max_length=10, verbose_name='Priorité')),
                ('scheduled_at', models.DateTimeField(help_text='Quand envoyer la notification', verbose_name='Programmé pour')),
                ('sent_at', models.DateTimeField(blank=True, null=True, verbose_name='Envoyé le')),
                ('delivered_at', models.DateTimeField(blank=True, null=True, verbose_name='Livré le')),
                ('read_at', models.DateTimeField(blank=True, null=True, verbose_name='Lu le')),
                ('attempt_count', models.PositiveIntegerField(default=0, verbose_name='Tentatives')),
                ('max_attempts', models.PositiveIntegerField(default=3, verbose_name='Max tentatives')),
                ('last_error', models.TextField(blank=True, verbose_name='Dernière erreur')),
                ('response_received', models.BooleanField(default=False, verbose_name='Réponse reçue')),
                ('response_text', models.TextField(blank=True, verbose_name='Texte de réponse')),
                ('response_at', models.DateTimeField(blank=True, null=True, verbose_name='Réponse reçue le')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('content_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contenttypes.contenttype', verbose_name="Type d'objet")),
                ('recipient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='received_notifications', to=settings.AUTH_USER_MODEL, verbose_name='Destinataire')),
            ],
            options={
                'verbose_name': 'Notification',
                'verbose_name_plural': 'Notifications',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='SMSProvider',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Ex: Orange Sénégal, Free Senegal', max_length=50, verbose_name='Nom du fournisseur')),
                ('provider_type', models.CharField(choices=[('orange', 'Orange SMS API'), ('free', 'Free SMS'), ('expresso', 'Expresso'), ('generic', 'Générique HTTP')], max_length=20, verbose_name='Type')),
                ('api_url', models.URLField(help_text='Endpoint pour envoyer SMS', verbose_name='URL API')),
                ('api_key', models.CharField(max_length=200, verbose_name='Clé API')),
                ('api_secret', models.CharField(blank=True, max_length=200, verbose_name='Secret API')),
                ('sender_name', models.CharField(help_text='11 caractères max, ex: SmartQueue', max_length=11, verbose_name='Nom expéditeur')),
                ('rate_limit_per_minute', models.PositiveIntegerField(default=60, verbose_name='Limite par minute')),
                ('cost_per_sms', models.DecimalField(decimal_places=2, default=25.0, help_text='Pour suivi des coûts', max_digits=10, verbose_name='Coût par SMS (CFA)')),
                ('is_active', models.BooleanField(default=True, verbose_name='Actif')),
                ('is_primary', models.BooleanField(default=False, verbose_name='Fournisseur principal')),
                ('priority', models.PositiveIntegerField(default=1, help_text='1 = plus haute priorité', verbose_name='Priorité')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Fournisseur SMS',
                'verbose_name_plural': 'Fournisseurs SMS',
                'ordering': ['priority', 'name'],
            },
        ),
        migrations.CreateModel(
            name='NotificationTemplate',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('name', models.CharField(help_text='Ex: SMS Ticket Appelé', max_length=100, verbose_name='Nom du template')),
                ('category', models.CharField(choices=[('ticket_created', 'Ticket créé'), ('ticket_called', 'Ticket appelé'), ('ticket_completed', 'Service terminé'), ('ticket_cancelled', 'Ticket annulé'), ('queue_position_update', 'Position mise à jour'), ('appointment_created', 'RDV créé'), ('appointment_confirmed', 'RDV confirmé'), ('appointment_reminder', 'Rappel RDV'), ('appointment_cancelled', 'RDV annulé'), ('appointment_rescheduled', 'RDV reporté'), ('queue_opened', 'File ouverte'), ('queue_closed', 'File fermée'), ('queue_full', 'File complète'), ('account_created', 'Compte créé'), ('password_reset', 'Reset mot de passe'), ('system_maintenance', 'Maintenance système')], help_text="Type d'événement notifié", max_length=30, verbose_name='Catégorie')),
                ('notification_type', models.CharField(choices=[('sms', 'SMS'), ('email', 'Email'), ('push', 'Notification Push'), ('web', 'Notification Web')], max_length=10, verbose_name='Type de notification')),
                ('subject_fr', models.CharField(blank=True, help_text='Pour emails uniquement', max_length=200, verbose_name='Sujet (Français)')),
                ('subject_wo', models.CharField(blank=True, help_text='Pour emails uniquement', max_length=200, verbose_name='Sujet (Wolof)')),
                ('message_fr', models.TextField(help_text='Variables: {ticket_number}, {organization}, {queue_name}, {position}, etc.', verbose_name='Message (Français)')),
                ('message_wo', models.TextField(blank=True, help_text='Traduction wolof du message', verbose_name='Message (Wolof)')),
                ('is_active', models.BooleanField(default=True, verbose_name='Actif')),
                ('send_immediately', models.BooleanField(default=True, help_text='Si False, sera programmé', verbose_name='Envoyer immédiatement')),
                ('delay_minutes', models.PositiveIntegerField(default=0, help_text='Délai avant envoi (pour rappels)', verbose_name='Délai (minutes)')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='Créé par')),
            ],
            options={
                'verbose_name': 'Template de notification',
                'verbose_name_plural': 'Templates de notifications',
                'ordering': ['category', 'notification_type'],
                'unique_together': {('category', 'notification_type')},
            },
        ),
        migrations.CreateModel(
            name='NotificationPreference',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('prefer_sms', models.BooleanField(default=True, help_text='Recevoir des SMS', verbose_name='SMS activés')),
                ('prefer_email', models.BooleanField(default=True, help_text='Recevoir des emails', verbose_name='Emails activés')),
                ('prefer_push', models.BooleanField(default=True, verbose_name='Notifications push activées')),
                ('prefer_web', models.BooleanField(default=True, verbose_name='Notifications web activées')),
                ('language', models.CharField(choices=[('fr', 'Français'), ('wo', 'Wolof')], default='fr', max_length=5, verbose_name='Langue préférée')),
                ('notify_ticket_called', models.BooleanField(default=True, verbose_name='Ticket appelé')),
                ('notify_position_update', models.BooleanField(default=False, help_text='Notifications fréquentes, peut déranger', verbose_name='Mise à jour position')),
                ('notify_queue_full', models.BooleanField(default=True, verbose_name='File complète')),
                ('notify_appointment_confirmed', models.BooleanField(default=True, verbose_name='RDV confirmé')),
                ('notify_appointment_reminder', models.BooleanField(default=True, verbose_name='Rappel RDV')),
                ('appointment_reminder_hours', models.PositiveIntegerField(default=24, help_text="Nombre d'heures avant le RDV pour le rappel", verbose_name='Rappel RDV (heures avant)')),
                ('quiet_hours_start', models.TimeField(default='22:00', help_text='Ne pas déranger après cette heure', verbose_name='Début heures silencieuses')),
                ('quiet_hours_end', models.TimeField(default='07:00', help_text='Ne pas déranger avant cette heure', verbose_name='Fin heures silencieuses')),
                ('emergency_phone', models.CharField(blank=True, help_text='Pour notifications urgentes si principal inaccessible', max_length=15, validators=[django.core.validators.RegexValidator(regex='^\\+221[0-9]{9}$')], verbose_name='Téléphone urgence')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='notification_preferences', to=settings.AUTH_USER_MODEL, verbose_name='Utilisateur')),
            ],
            options={
                'verbose_name': 'Préférence de notification',
                'verbose_name_plural': 'Préférences de notifications',
            },
        ),
        migrations.CreateModel(
            name='NotificationLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action', models.CharField(choices=[('created', 'Créée'), ('queued', 'Mise en file'), ('sent', 'Envoyée'), ('delivered', 'Livrée'), ('failed', 'Échec'), ('retry', 'Nouvel essai'), ('cancelled', 'Annulée')], max_length=20, verbose_name='Action')),
                ('details', models.JSONField(blank=True, help_text='Métadonnées techniques (provider response, error codes, etc.)', null=True, verbose_name='Détails')),
                ('cost', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='Coût (CFA)')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('notification', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='logs', to='notifications.notification', verbose_name='Notification')),
                ('provider_used', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='notifications.smsprovider', verbose_name='Fournisseur utilisé')),
            ],
            options={
                'verbose_name': 'Journal de notification',
                'verbose_name_plural': 'Journal des notifications',
                'ordering': ['-created_at'],
            },
        ),
        migrations.AddField(
            model_name='notification',
            name='template',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='notifications.notificationtemplate', verbose_name='Template'),
        ),
        migrations.AddIndex(
            model_name='notification',
            index=models.Index(fields=['recipient', 'status'], name='notificatio_recipie_e285de_idx'),
        ),
        migrations.AddIndex(
            model_name='notification',
            index=models.Index(fields=['template', 'status'], name='notificatio_templat_1a9c31_idx'),
        ),
        migrations.AddIndex(
            model_name='notification',
            index=models.Index(fields=['scheduled_at', 'status'], name='notificatio_schedul_963ed3_idx'),
        ),
        migrations.AddIndex(
            model_name='notification',
            index=models.Index(fields=['content_type', 'object_id'], name='notificatio_content_702c56_idx'),
        ),
    ]
