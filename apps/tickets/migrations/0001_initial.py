# Generated by Django 4.2.13 on 2025-08-14 23:14

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('services', '0001_initial'),
        ('queues', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Ticket',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('ticket_number', models.CharField(help_text='Numéro affiché au client (ex: A001, B012)', max_length=20, verbose_name='Numéro de ticket')),
                ('priority', models.CharField(choices=[('low', 'Normale'), ('medium', 'Moyenne'), ('high', 'Élevée'), ('urgent', 'Urgente')], default='low', max_length=10, verbose_name='Priorité')),
                ('creation_channel', models.CharField(choices=[('mobile', 'Application mobile'), ('web', 'Site web'), ('sms', 'SMS'), ('kiosk', 'Borne tactile'), ('counter', 'Au guichet'), ('phone', 'Téléphone')], default='mobile', max_length=20, verbose_name='Canal de création')),
                ('customer_notes', models.TextField(blank=True, help_text='Notes ou demandes spéciales du client', max_length=500, verbose_name='Notes du client')),
                ('documents_brought', models.JSONField(blank=True, default=list, help_text='Liste des documents que le client a apportés', verbose_name='Documents apportés')),
                ('status', models.CharField(choices=[('waiting', 'En attente'), ('called', 'Appelé'), ('serving', 'En cours de service'), ('served', 'Servi'), ('cancelled', 'Annulé'), ('expired', 'Expiré'), ('no_show', 'Absent'), ('transferred', 'Transféré')], default='waiting', max_length=20, verbose_name='Statut')),
                ('queue_position', models.PositiveIntegerField(default=0, verbose_name='Position dans la file')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Créé le')),
                ('called_at', models.DateTimeField(blank=True, null=True, verbose_name='Appelé le')),
                ('service_started_at', models.DateTimeField(blank=True, null=True, verbose_name='Service commencé le')),
                ('service_ended_at', models.DateTimeField(blank=True, null=True, verbose_name='Service terminé le')),
                ('expires_at', models.DateTimeField(help_text="Date/heure d'expiration du ticket", verbose_name='Expire le')),
                ('wait_time_minutes', models.PositiveIntegerField(default=0, verbose_name="Temps d'attente (min)")),
                ('service_time_minutes', models.PositiveIntegerField(default=0, verbose_name='Temps de service (min)')),
                ('call_count', models.PositiveIntegerField(default=0, help_text='Nombre de fois que ce ticket a été appelé', verbose_name="Nombre d'appels")),
                ('notifications_sent', models.JSONField(blank=True, default=list, verbose_name='Notifications envoyées')),
                ('created_ip', models.GenericIPAddressField(blank=True, null=True, verbose_name='Adresse IP de création')),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tickets', to=settings.AUTH_USER_MODEL, verbose_name='Client')),
                ('queue', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tickets', to='queues.queue', verbose_name="File d'attente")),
                ('service', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tickets', to='services.service', verbose_name='Service')),
                ('serving_agent', models.ForeignKey(blank=True, help_text='Agent qui sert ce client', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='served_tickets', to=settings.AUTH_USER_MODEL, verbose_name='Agent')),
            ],
            options={
                'verbose_name': 'Ticket',
                'verbose_name_plural': 'Tickets',
                'db_table': 'tickets_ticket',
                'ordering': ['priority', 'created_at'],
                'indexes': [models.Index(fields=['queue', 'status'], name='tickets_tic_queue_i_63501f_idx'), models.Index(fields=['customer', 'created_at'], name='tickets_tic_custome_30cf70_idx'), models.Index(fields=['status', 'priority'], name='tickets_tic_status_b256f6_idx'), models.Index(fields=['expires_at'], name='tickets_tic_expires_e92ba3_idx'), models.Index(fields=['created_at'], name='tickets_tic_created_5dd600_idx')],
                'unique_together': {('queue', 'ticket_number')},
            },
        ),
    ]
