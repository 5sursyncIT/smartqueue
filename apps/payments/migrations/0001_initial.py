# Generated by Django 4.2.13 on 2025-08-22 15:15

from decimal import Decimal
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('appointments', '0001_initial'),
        ('business', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('queue_management', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Payment',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('payment_number', models.CharField(editable=False, help_text='Généré automatiquement (ex: PAY001)', max_length=20, unique=True, verbose_name='Numéro de paiement')),
                ('external_reference', models.CharField(blank=True, help_text='ID de transaction chez le fournisseur', max_length=100, verbose_name='Référence externe')),
                ('payment_type', models.CharField(choices=[('ticket_fee', 'Frais de ticket'), ('appointment_fee', 'Frais de RDV'), ('service_fee', 'Frais de service'), ('penalty_fee', 'Pénalité (no-show)'), ('subscription_fee', 'Abonnement premium'), ('other', 'Autre')], default='service_fee', max_length=20, verbose_name='Type de paiement')),
                ('amount', models.DecimalField(decimal_places=2, help_text='Montant hors frais', max_digits=12, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))], verbose_name='Montant principal (CFA)')),
                ('fees', models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text='Frais de transaction', max_digits=10, verbose_name='Frais (CFA)')),
                ('total_amount', models.DecimalField(decimal_places=2, help_text='Montant + frais', max_digits=12, verbose_name='Montant total (CFA)')),
                ('currency', models.CharField(default='XOF', max_length=5, verbose_name='Devise')),
                ('payer_phone', models.CharField(help_text='Numéro mobile money', max_length=15, validators=[django.core.validators.RegexValidator(message='Format: +221XXXXXXXXX', regex='^\\+221[0-9]{9}$')], verbose_name='Téléphone payeur')),
                ('payer_name', models.CharField(max_length=100, verbose_name='Nom du payeur')),
                ('description', models.TextField(blank=True, help_text='Motif du paiement', verbose_name='Description')),
                ('status', models.CharField(choices=[('pending', 'En attente'), ('processing', 'En cours de traitement'), ('completed', 'Complété'), ('failed', 'Échec'), ('cancelled', 'Annulé'), ('refunded', 'Remboursé'), ('expired', 'Expiré')], default='pending', max_length=20, verbose_name='Statut')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Créé le')),
                ('processed_at', models.DateTimeField(blank=True, null=True, verbose_name='Traité le')),
                ('completed_at', models.DateTimeField(blank=True, null=True, verbose_name='Complété le')),
                ('expires_at', models.DateTimeField(verbose_name='Expire le')),
                ('callback_url', models.URLField(blank=True, verbose_name='URL de callback')),
                ('return_url', models.URLField(blank=True, verbose_name='URL de retour')),
                ('metadata', models.JSONField(blank=True, help_text='Données supplémentaires du fournisseur', null=True, verbose_name='Métadonnées')),
                ('error_code', models.CharField(blank=True, max_length=50, verbose_name="Code d'erreur")),
                ('error_message', models.TextField(blank=True, verbose_name="Message d'erreur")),
                ('created_ip', models.GenericIPAddressField(blank=True, null=True, verbose_name='IP de création')),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('appointment', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='payments', to='appointments.appointment', verbose_name='RDV lié')),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='payments', to=settings.AUTH_USER_MODEL, verbose_name='Client')),
                ('organization', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='business.organization', verbose_name='Organisation')),
            ],
            options={
                'verbose_name': 'Paiement',
                'verbose_name_plural': 'Paiements',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='PaymentPlan',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Nom du plan')),
                ('plan_type', models.CharField(choices=[('free', 'Gratuit'), ('basic', 'Basique'), ('premium', 'Premium'), ('enterprise', 'Entreprise'), ('custom', 'Personnalisé')], max_length=20, verbose_name='Type de plan')),
                ('ticket_fee', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=10, verbose_name='Frais par ticket (CFA)')),
                ('appointment_fee', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=10, verbose_name='Frais par RDV (CFA)')),
                ('no_show_penalty', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=10, verbose_name='Pénalité no-show (CFA)')),
                ('max_tickets_per_month', models.PositiveIntegerField(blank=True, help_text='null = illimité', null=True, verbose_name='Max tickets/mois')),
                ('max_appointments_per_month', models.PositiveIntegerField(blank=True, null=True, verbose_name='Max RDV/mois')),
                ('has_premium_support', models.BooleanField(default=False, verbose_name='Support premium')),
                ('has_analytics', models.BooleanField(default=False, verbose_name='Analytics avancées')),
                ('has_custom_branding', models.BooleanField(default=False, verbose_name='Personnalisation de marque')),
                ('is_active', models.BooleanField(default=True, verbose_name='Actif')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Plan de tarification',
                'verbose_name_plural': 'Plans de tarification',
            },
        ),
        migrations.CreateModel(
            name='PaymentProvider',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('name', models.CharField(help_text='Ex: Wave Sénégal, Orange Money', max_length=50, verbose_name='Nom du fournisseur')),
                ('provider_type', models.CharField(choices=[('wave', 'Wave Money'), ('orange_money', 'Orange Money'), ('free_money', 'Free Money'), ('wizall', 'Wizall Money'), ('wari', 'Wari'), ('postefinance', 'Poste Finance'), ('bank_transfer', 'Virement bancaire'), ('cash', 'Espèces')], max_length=20, verbose_name='Type de fournisseur')),
                ('api_url', models.URLField(blank=True, help_text='Endpoint pour les paiements', verbose_name='URL API')),
                ('api_key', models.CharField(blank=True, max_length=200, verbose_name='Clé API')),
                ('api_secret', models.CharField(blank=True, max_length=200, verbose_name='Secret API')),
                ('merchant_id', models.CharField(blank=True, help_text="Identifiant marchand fourni par l'opérateur", max_length=100, verbose_name='ID Marchand')),
                ('supported_currency', models.CharField(choices=[('XOF', 'Franc CFA (XOF)'), ('EUR', 'Euro'), ('USD', 'Dollar US')], default='XOF', max_length=5, verbose_name='Devise supportée')),
                ('min_amount', models.DecimalField(decimal_places=2, default=Decimal('100.00'), help_text='Montant minimum pour une transaction', max_digits=12, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))], verbose_name='Montant minimum (CFA)')),
                ('max_amount', models.DecimalField(decimal_places=2, default=Decimal('1000000.00'), help_text='Montant maximum pour une transaction', max_digits=12, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))], verbose_name='Montant maximum (CFA)')),
                ('transaction_fee_fixed', models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text='Frais fixes par transaction', max_digits=10, verbose_name='Frais fixes (CFA)')),
                ('transaction_fee_percent', models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text='Frais en % du montant (ex: 1.5 pour 1.5%)', max_digits=5, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))], verbose_name='Frais en pourcentage')),
                ('is_active', models.BooleanField(default=True, verbose_name='Actif')),
                ('is_default', models.BooleanField(default=False, verbose_name='Fournisseur par défaut')),
                ('priority', models.PositiveIntegerField(default=1, help_text='1 = plus haute priorité', verbose_name='Priorité')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Fournisseur de paiement',
                'verbose_name_plural': 'Fournisseurs de paiement',
                'ordering': ['priority', 'name'],
            },
        ),
        migrations.CreateModel(
            name='PaymentLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action', models.CharField(choices=[('initiated', 'Initié'), ('sent_to_provider', 'Envoyé au fournisseur'), ('callback_received', 'Callback reçu'), ('completed', 'Complété'), ('failed', 'Échec'), ('cancelled', 'Annulé'), ('refunded', 'Remboursé'), ('expired', 'Expiré')], max_length=20, verbose_name='Action')),
                ('details', models.JSONField(blank=True, help_text='Données de la requête/réponse API', null=True, verbose_name='Détails')),
                ('http_status', models.PositiveIntegerField(blank=True, null=True, verbose_name='Code HTTP')),
                ('response_time_ms', models.PositiveIntegerField(blank=True, null=True, verbose_name='Temps de réponse (ms)')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('payment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='logs', to='payments.payment', verbose_name='Paiement')),
            ],
            options={
                'verbose_name': 'Journal de paiement',
                'verbose_name_plural': 'Journal des paiements',
                'ordering': ['-created_at'],
            },
        ),
        migrations.AddField(
            model_name='payment',
            name='provider',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='payments.paymentprovider', verbose_name='Fournisseur de paiement'),
        ),
        migrations.AddField(
            model_name='payment',
            name='ticket',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='payments', to='queue_management.ticket', verbose_name='Ticket lié'),
        ),
        migrations.CreateModel(
            name='PaymentMethod',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('phone_number', models.CharField(max_length=15, validators=[django.core.validators.RegexValidator(regex='^\\+221[0-9]{9}$')], verbose_name='Numéro de téléphone')),
                ('holder_name', models.CharField(max_length=100, verbose_name='Nom du titulaire')),
                ('is_default', models.BooleanField(default=False, verbose_name='Méthode par défaut')),
                ('is_verified', models.BooleanField(default=False, help_text='Numéro vérifié par une transaction test', verbose_name='Vérifié')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('last_used_at', models.DateTimeField(blank=True, null=True)),
                ('provider', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='payments.paymentprovider', verbose_name='Fournisseur')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='payment_methods', to=settings.AUTH_USER_MODEL, verbose_name='Utilisateur')),
            ],
            options={
                'verbose_name': 'Méthode de paiement',
                'verbose_name_plural': 'Méthodes de paiement',
                'unique_together': {('user', 'provider', 'phone_number')},
            },
        ),
        migrations.AddIndex(
            model_name='payment',
            index=models.Index(fields=['customer', 'status'], name='payments_pa_custome_25a299_idx'),
        ),
        migrations.AddIndex(
            model_name='payment',
            index=models.Index(fields=['organization', 'created_at'], name='payments_pa_organiz_58856f_idx'),
        ),
        migrations.AddIndex(
            model_name='payment',
            index=models.Index(fields=['payment_number'], name='payments_pa_payment_a0847d_idx'),
        ),
        migrations.AddIndex(
            model_name='payment',
            index=models.Index(fields=['external_reference'], name='payments_pa_externa_e30da4_idx'),
        ),
        migrations.AddIndex(
            model_name='payment',
            index=models.Index(fields=['status', 'created_at'], name='payments_pa_status_343680_idx'),
        ),
    ]
