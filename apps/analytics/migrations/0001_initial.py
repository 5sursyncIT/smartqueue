# Generated by Django 4.2.13 on 2025-08-22 16:34

from decimal import Decimal
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('appointments', '0001_initial'),
        ('services', '0001_initial'),
        ('queues', '0001_initial'),
        ('tickets', '0001_initial'),
        ('organizations', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='DashboardWidget',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=100, verbose_name='Titre du widget')),
                ('widget_type', models.CharField(choices=[('kpi_card', 'Carte KPI'), ('line_chart', 'Graphique linéaire'), ('bar_chart', 'Graphique barres'), ('pie_chart', 'Graphique camembert'), ('table', 'Tableau'), ('map', 'Carte géographique')], max_length=20, verbose_name='Type de widget')),
                ('position_x', models.PositiveIntegerField(default=0, verbose_name='Position X')),
                ('position_y', models.PositiveIntegerField(default=0, verbose_name='Position Y')),
                ('width', models.PositiveIntegerField(default=6, verbose_name='Largeur (colonnes)')),
                ('height', models.PositiveIntegerField(default=4, verbose_name='Hauteur (lignes)')),
                ('data_source', models.CharField(max_length=50, verbose_name='Source de données')),
                ('filters', models.JSONField(blank=True, default=dict, verbose_name='Filtres')),
                ('display_options', models.JSONField(blank=True, default=dict, verbose_name="Options d'affichage")),
                ('is_visible', models.BooleanField(default=True, verbose_name='Visible')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='dashboard_widgets', to=settings.AUTH_USER_MODEL, verbose_name='Utilisateur')),
            ],
            options={
                'verbose_name': 'Widget dashboard',
                'verbose_name_plural': 'Widgets dashboard',
                'ordering': ['position_y', 'position_x'],
            },
        ),
        migrations.CreateModel(
            name='ServiceMetrics',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('date', models.DateField(verbose_name='Date')),
                ('tickets_issued', models.PositiveIntegerField(default=0)),
                ('tickets_served', models.PositiveIntegerField(default=0)),
                ('tickets_cancelled', models.PositiveIntegerField(default=0)),
                ('total_wait_time', models.PositiveIntegerField(default=0, verbose_name='Temps attente total (min)')),
                ('total_service_time', models.PositiveIntegerField(default=0, verbose_name='Temps service total (min)')),
                ('revenue', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=10, verbose_name='Revenus (CFA)')),
                ('total_ratings', models.PositiveIntegerField(default=0)),
                ('total_rating_score', models.PositiveIntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('organization', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='service_metrics', to='organizations.organization', verbose_name='Organisation')),
                ('service', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='metrics', to='services.service', verbose_name='Service')),
            ],
            options={
                'verbose_name': 'Métriques service',
                'verbose_name_plural': 'Métriques services',
                'ordering': ['-date', 'service__name'],
                'unique_together': {('service', 'date')},
            },
        ),
        migrations.CreateModel(
            name='QueueMetrics',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('timestamp', models.DateTimeField(help_text='Heure précise de cette mesure', verbose_name='Horodatage')),
                ('waiting_customers', models.PositiveIntegerField(default=0, verbose_name='Clients en attente')),
                ('current_wait_time', models.PositiveIntegerField(default=0, verbose_name='Temps attente actuel (min)')),
                ('tickets_issued_hour', models.PositiveIntegerField(default=0, verbose_name='Tickets émis cette heure')),
                ('tickets_served_hour', models.PositiveIntegerField(default=0, verbose_name='Tickets servis cette heure')),
                ('queue_status', models.CharField(max_length=20, verbose_name='Statut de la file')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('queue', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='metrics', to='queues.queue', verbose_name="File d'attente")),
            ],
            options={
                'verbose_name': 'Métriques file',
                'verbose_name_plural': 'Métriques files',
                'ordering': ['-timestamp'],
                'indexes': [models.Index(fields=['queue', 'timestamp'], name='analytics_q_queue_i_336dff_idx'), models.Index(fields=['timestamp'], name='analytics_q_timesta_a7116a_idx')],
            },
        ),
        migrations.CreateModel(
            name='OrganizationMetrics',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('date', models.DateField(help_text='Date de ces statistiques', verbose_name='Date')),
                ('tickets_issued', models.PositiveIntegerField(default=0, help_text='Nombre total de tickets pris ce jour', verbose_name='Tickets émis')),
                ('tickets_served', models.PositiveIntegerField(default=0, help_text='Nombre de tickets traités avec succès', verbose_name='Tickets servis')),
                ('tickets_cancelled', models.PositiveIntegerField(default=0, help_text='Tickets annulés par clients', verbose_name='Tickets annulés')),
                ('tickets_expired', models.PositiveIntegerField(default=0, help_text='Tickets expirés sans service', verbose_name='Tickets expirés')),
                ('tickets_no_show', models.PositiveIntegerField(default=0, help_text="Clients ne s'étant pas présentés", verbose_name='No-show')),
                ('appointments_created', models.PositiveIntegerField(default=0, verbose_name='RDV créés')),
                ('appointments_completed', models.PositiveIntegerField(default=0, verbose_name='RDV terminés')),
                ('appointments_cancelled', models.PositiveIntegerField(default=0, verbose_name='RDV annulés')),
                ('appointments_no_show', models.PositiveIntegerField(default=0, verbose_name='RDV no-show')),
                ('avg_wait_time', models.PositiveIntegerField(default=0, verbose_name='Temps attente moyen (min)')),
                ('max_wait_time', models.PositiveIntegerField(default=0, verbose_name='Temps attente max (min)')),
                ('avg_service_time', models.PositiveIntegerField(default=0, verbose_name='Temps service moyen (min)')),
                ('total_ratings', models.PositiveIntegerField(default=0, verbose_name="Nombre d'évaluations")),
                ('avg_rating', models.DecimalField(decimal_places=1, default=Decimal('0.0'), help_text='Note moyenne sur 5', max_digits=3, verbose_name='Note moyenne')),
                ('peak_hour_start', models.TimeField(blank=True, null=True, verbose_name='Début heure de pointe')),
                ('peak_hour_end', models.TimeField(blank=True, null=True, verbose_name='Fin heure de pointe')),
                ('max_concurrent_customers', models.PositiveIntegerField(default=0, verbose_name='Max clients simultanés')),
                ('total_revenue', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=12, verbose_name='Revenus totaux (CFA)')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('organization', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='metrics', to='organizations.organization', verbose_name='Organisation')),
            ],
            options={
                'verbose_name': 'Métriques organisation',
                'verbose_name_plural': 'Métriques organisations',
                'ordering': ['-date'],
                'indexes': [models.Index(fields=['organization', 'date'], name='analytics_o_organiz_c9cfae_idx'), models.Index(fields=['date'], name='analytics_o_date_b25f85_idx')],
                'unique_together': {('organization', 'date')},
            },
        ),
        migrations.CreateModel(
            name='CustomerSatisfaction',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('rating', models.PositiveIntegerField(choices=[(1, 'Très insatisfait'), (2, 'Insatisfait'), (3, 'Neutre'), (4, 'Satisfait'), (5, 'Très satisfait')], help_text='Note de 1 à 5', verbose_name='Note')),
                ('comment', models.TextField(blank=True, help_text='Commentaire optionnel du client', verbose_name='Commentaire')),
                ('wait_time_rating', models.PositiveIntegerField(blank=True, choices=[(1, 'Très insatisfait'), (2, 'Insatisfait'), (3, 'Neutre'), (4, 'Satisfait'), (5, 'Très satisfait')], null=True, verbose_name="Note temps d'attente")),
                ('service_quality_rating', models.PositiveIntegerField(blank=True, choices=[(1, 'Très insatisfait'), (2, 'Insatisfait'), (3, 'Neutre'), (4, 'Satisfait'), (5, 'Très satisfait')], null=True, verbose_name='Note qualité service')),
                ('staff_friendliness_rating', models.PositiveIntegerField(blank=True, choices=[(1, 'Très insatisfait'), (2, 'Insatisfait'), (3, 'Neutre'), (4, 'Satisfait'), (5, 'Très satisfait')], null=True, verbose_name='Note amabilité personnel')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('appointment', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='ratings', to='appointments.appointment', verbose_name='Rendez-vous')),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='satisfaction_ratings', to=settings.AUTH_USER_MODEL, verbose_name='Client')),
                ('organization', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='satisfaction_ratings', to='organizations.organization', verbose_name='Organisation')),
                ('service', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='satisfaction_ratings', to='services.service', verbose_name='Service')),
                ('ticket', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='ratings', to='tickets.ticket', verbose_name='Ticket')),
            ],
            options={
                'verbose_name': 'Satisfaction client',
                'verbose_name_plural': 'Satisfactions clients',
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['organization', 'created_at'], name='analytics_c_organiz_034949_idx'), models.Index(fields=['service', 'rating'], name='analytics_c_service_e73184_idx'), models.Index(fields=['rating'], name='analytics_c_rating_6ff43e_idx')],
            },
        ),
    ]
